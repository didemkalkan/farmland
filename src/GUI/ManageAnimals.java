/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Abstract.Animal;
import Abstract.Buildings;
import IsAAnimal.Chicken;
import IsAAnimal.Cow;
import IsAAnimal.Horse;
import SystemAndMain.BuildingSys;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class ManageAnimals extends javax.swing.JFrame {

    SetFarmFrame sff;
    
    public ManageAnimals(SetFarmFrame sff) {
        initComponents();
        
        setTitle("Info-FarmLand");
        setLocationRelativeTo(null);
        
        this.sff = sff;
        
        lblBudget.setText("Budget: " + BuildingSys.budget + " $"); 
        
        String type = BuildingSys.list.get(0).getType();
        
        switch(type){
            case "Coop":
                lblAnimalName.setText("Chicken - 35 $");
                pnlEgg.setVisible(true);
                pnlMilk.setVisible(false);
                pnlTransport.setVisible(false);
                pnlLock.setVisible(false);
                btnBuy.setVisible(true);
                tfCurrentAge.setVisible(true);
                break;
            case "Cowshed":
                lblAnimalName.setText("Cowshed - 700 $");
                pnlEgg.setVisible(false);
                pnlMilk.setVisible(true);
                pnlTransport.setVisible(false);
                pnlLock.setVisible(false);
                btnBuy.setVisible(true);
                tfCurrentAge.setVisible(true);
                break;
            case "Stable":
                lblAnimalName.setText("Horse - 1000 $");
                pnlEgg.setVisible(false);
                pnlMilk.setVisible(false);
                pnlTransport.setVisible(true);
                pnlLock.setVisible(false);
                btnBuy.setVisible(true);
                tfCurrentAge.setVisible(true);
                break;
            case "Silo":
                pnlEgg.setVisible(false);
                pnlMilk.setVisible(false);
                pnlTransport.setVisible(false);
                pnlLock.setVisible(true);
                btnBuy.setVisible(false);
                tfCurrentAge.setVisible(false);                
        }
    }

    public JComboBox<String> getCmbBuildings() {
        return cmbBuildings;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblSiloRes = new javax.swing.JLabel();
        lblHorseRes = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblBudget = new javax.swing.JLabel();
        cmbBuildings = new javax.swing.JComboBox<>();
        btnClose = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        pnlLock = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tfCurrentAge = new javax.swing.JTextField();
        pnlEgg = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfEgg = new javax.swing.JTextField();
        pnlMilk = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfMilk = new javax.swing.JTextField();
        pnlTransport = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tfTransport = new javax.swing.JTextField();
        btnBuy = new javax.swing.JButton();
        lblAnimalName = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnYearlyFeed = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnDailyTransport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(lblSiloRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, 220, 30));
        jPanel1.add(lblHorseRes, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 220, 30));

        jPanel2.setBackground(new java.awt.Color(177, 255, 177));

        lblBudget.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        cmbBuildings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBuildingsActionPerformed(evt);
            }
        });

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblBudget, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(cmbBuildings, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBudget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbBuildings)
                        .addComponent(btnClose)))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 50));

        jPanel3.setBackground(new java.awt.Color(204, 255, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Animal Information"));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlLock.setBackground(new java.awt.Color(204, 255, 153));

        jLabel7.setText("Silo cannot take animals!");

        javax.swing.GroupLayout pnlLockLayout = new javax.swing.GroupLayout(pnlLock);
        pnlLock.setLayout(pnlLockLayout);
        pnlLockLayout.setHorizontalGroup(
            pnlLockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
            .addGroup(pnlLockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlLockLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        pnlLockLayout.setVerticalGroup(
            pnlLockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
            .addGroup(pnlLockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlLockLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel3.add(pnlLock, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 240, 180));

        jLabel1.setText("Current Age:");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
        jPanel3.add(tfCurrentAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 100, -1));

        pnlEgg.setBackground(new java.awt.Color(204, 255, 153));

        jLabel2.setText("Daily Egg:");

        tfEgg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfEggKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnlEggLayout = new javax.swing.GroupLayout(pnlEgg);
        pnlEgg.setLayout(pnlEggLayout);
        pnlEggLayout.setHorizontalGroup(
            pnlEggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEggLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(tfEgg, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlEggLayout.setVerticalGroup(
            pnlEggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEggLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfEgg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.add(pnlEgg, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 210, 50));

        pnlMilk.setBackground(new java.awt.Color(204, 255, 153));

        jLabel3.setText("Daily Milk:");

        tfMilk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfMilkKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnlMilkLayout = new javax.swing.GroupLayout(pnlMilk);
        pnlMilk.setLayout(pnlMilkLayout);
        pnlMilkLayout.setHorizontalGroup(
            pnlMilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMilkLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(tfMilk, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlMilkLayout.setVerticalGroup(
            pnlMilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMilkLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfMilk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.add(pnlMilk, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 210, 60));

        pnlTransport.setBackground(new java.awt.Color(204, 255, 153));

        jLabel4.setText("Daily Tprt.:");

        tfTransport.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTransportKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnlTransportLayout = new javax.swing.GroupLayout(pnlTransport);
        pnlTransport.setLayout(pnlTransportLayout);
        pnlTransportLayout.setHorizontalGroup(
            pnlTransportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTransportLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(tfTransport, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlTransportLayout.setVerticalGroup(
            pnlTransportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTransportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTransportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfTransport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.add(pnlTransport, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 210, 60));

        btnBuy.setText("Buy");
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });
        jPanel3.add(btnBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 160, -1));

        lblAnimalName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel3.add(lblAnimalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 110, 20));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 260, 220));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Manage Silos:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, -1, -1));

        btnYearlyFeed.setText("Calculate Yearly Feed Cost");
        btnYearlyFeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYearlyFeedActionPerformed(evt);
            }
        });
        jPanel1.add(btnYearlyFeed, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 220, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Manage Horses:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, -1, -1));

        btnDailyTransport.setText("Try Daily Transport");
        btnDailyTransport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDailyTransportActionPerformed(evt);
            }
        });
        jPanel1.add(btnDailyTransport, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 210, 220, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbBuildingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBuildingsActionPerformed
        String type = cmbBuildings.getSelectedItem().toString().substring(6);
        
        switch(type){
            case "Coop":
                lblAnimalName.setText("Chicken - 35 $");
                pnlEgg.setVisible(true);
                pnlMilk.setVisible(false);
                pnlTransport.setVisible(false);
                pnlLock.setVisible(false);
                btnBuy.setVisible(true);
                tfCurrentAge.setVisible(true);
                break;
            case "Cowshed":
                lblAnimalName.setText("Cowshed - 700 $");
                pnlEgg.setVisible(false);
                pnlMilk.setVisible(true);
                pnlTransport.setVisible(false);
                pnlLock.setVisible(false);
                btnBuy.setVisible(true);
                tfCurrentAge.setVisible(true);
                break;
            case "Stable":
                lblAnimalName.setText("Horse - 1000 $");
                pnlEgg.setVisible(false);
                pnlMilk.setVisible(false);
                pnlTransport.setVisible(true);
                pnlLock.setVisible(false);
                btnBuy.setVisible(true);
                tfCurrentAge.setVisible(true);
                break;
            case "Silo":
                pnlEgg.setVisible(false);
                pnlMilk.setVisible(false);
                pnlTransport.setVisible(false);
                pnlLock.setVisible(true);
                btnBuy.setVisible(false);
                tfCurrentAge.setVisible(false);
        }
    }//GEN-LAST:event_cmbBuildingsActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        sff.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        int id = Integer.parseInt(cmbBuildings.getSelectedItem().toString().substring(0, 3)),
                res;
        Buildings b = BuildingSys.searchBuilding(id);
        Animal a = null;
        boolean flagEmptySpace = false;
        
        if(tfCurrentAge.getText().equals(""))
            flagEmptySpace = true;
        else
            switch(b.getType()){
                case "Coop":
                    if(tfEgg.getText().equals(""))
                        flagEmptySpace = true;
                    break;
                case "Cowshed":
                    if(tfMilk.getText().equals(""))
                        flagEmptySpace = true;
                    break;
                case "Stable":
                    if(tfTransport.getText().equals(""))
                        flagEmptySpace = true;
            }
        
        if(!flagEmptySpace){
            switch(b.getType()){
                case "Coop":
                    if(Integer.parseInt(tfCurrentAge.getText()) < 5)
                        a = new Chicken(Integer.parseInt(tfCurrentAge.getText()), Integer.parseInt(tfEgg.getText()));                
                    break;
                case "Cowshed":
                    if(Integer.parseInt(tfCurrentAge.getText()) < 15)
                        a = new Cow(Integer.parseInt(tfCurrentAge.getText()), Double.parseDouble(tfMilk.getText()));
                    break;
                case "Stable":
                    if(Integer.parseInt(tfCurrentAge.getText()) < 17)
                        a = new Horse(Integer.parseInt(tfCurrentAge.getText()), Double.parseDouble(tfTransport.getText()));
            }

            if(a != null){
                res = BuildingSys.addAnimal(b, a);

                if(res == 0)
                    JOptionPane.showMessageDialog(null,"The budget is not enough for purchase!","Error",1);
                else if(res == -1)
                    JOptionPane.showMessageDialog(null,"There is not enough capacity in this building!","Error",1);
                else{
                    lblBudget.setText("Budget: " + BuildingSys.budget + " $");
                    sff.setLblBudget("Budget: " + BuildingSys.budget + " $");
                }
            }
            else
                switch(b.getType()){
                case "Coop":
                    JOptionPane.showMessageDialog(null,"A chicken cannot be older than 5!","Error",1);              
                    break;
                case "Cowshed":
                    JOptionPane.showMessageDialog(null,"A cow cannot be older than 15!","Error",1);
                    break;
                case "Stable":
                    JOptionPane.showMessageDialog(null,"A horse cannot be older than 17!","Error",1);
                }
        }
        else
            JOptionPane.showMessageDialog(null,"Fill all the empty spaces!","Error",1);
    }//GEN-LAST:event_btnBuyActionPerformed

    private void tfEggKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfEggKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            int id = Integer.parseInt(cmbBuildings.getSelectedItem().toString().substring(0, 3)),
                    res;
            Buildings b = BuildingSys.searchBuilding(id);
            Animal a = null;
            boolean flagEmptySpace = false;

            if(tfCurrentAge.getText().equals(""))
                flagEmptySpace = true;
            else
                switch(b.getType()){
                    case "Coop":
                        if(tfEgg.getText().equals(""))
                            flagEmptySpace = true;
                        break;
                    case "Cowshed":
                        if(tfMilk.getText().equals(""))
                            flagEmptySpace = true;
                        break;
                    case "Stable":
                        if(tfTransport.getText().equals(""))
                            flagEmptySpace = true;
                }

            if(!flagEmptySpace){
                switch(b.getType()){
                    case "Coop":
                        if(Integer.parseInt(tfCurrentAge.getText()) < 5)
                            a = new Chicken(Integer.parseInt(tfCurrentAge.getText()), Integer.parseInt(tfEgg.getText()));                
                        break;
                    case "Cowshed":
                        if(Integer.parseInt(tfCurrentAge.getText()) < 15)
                            a = new Cow(Integer.parseInt(tfCurrentAge.getText()), Double.parseDouble(tfMilk.getText()));
                        break;
                    case "Stable":
                        if(Integer.parseInt(tfCurrentAge.getText()) < 17)
                            a = new Horse(Integer.parseInt(tfCurrentAge.getText()), Double.parseDouble(tfTransport.getText()));
                }

                if(a != null){
                    res = BuildingSys.addAnimal(b, a);

                    if(res == 0)
                        JOptionPane.showMessageDialog(null,"The budget is not enough for purchase!","Error",1);
                    else if(res == -1)
                        JOptionPane.showMessageDialog(null,"There is not enough capacity in this building!","Error",1);
                    else{
                        lblBudget.setText("Budget: " + BuildingSys.budget + " $");
                        sff.setLblBudget("Budget: " + BuildingSys.budget + " $");
                    }
                }
                else
                    switch(b.getType()){
                    case "Coop":
                        JOptionPane.showMessageDialog(null,"A chicken cannot be older than 5!","Error",1);              
                        break;
                    case "Cowshed":
                        JOptionPane.showMessageDialog(null,"A cow cannot be older than 15!","Error",1);
                        break;
                    case "Stable":
                        JOptionPane.showMessageDialog(null,"A horse cannot be older than 17!","Error",1);
                    }
            }
            else
                JOptionPane.showMessageDialog(null,"Fill all the empty spaces!","Error",1);
        }
    }//GEN-LAST:event_tfEggKeyPressed

    private void btnDailyTransportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDailyTransportActionPerformed
        double res = BuildingSys.isHorsesDailyEnough();
        
        if(res == 0)
            lblHorseRes.setText("Enough hourses!");
        else{
            String resS = String.format("%.2f", res);
            lblHorseRes.setText("Hourses needed to carry " + resS + " kg");
        }
    }//GEN-LAST:event_btnDailyTransportActionPerformed

    private void btnYearlyFeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYearlyFeedActionPerformed
        double cost = BuildingSys.totalYearlyFeedCost();
        
        lblSiloRes.setText("Cost: " + cost + " $");
    }//GEN-LAST:event_btnYearlyFeedActionPerformed

    private void tfMilkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMilkKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            int id = Integer.parseInt(cmbBuildings.getSelectedItem().toString().substring(0, 3)),
                    res;
            Buildings b = BuildingSys.searchBuilding(id);
            Animal a = null;
            boolean flagEmptySpace = false;

            if(tfCurrentAge.getText().equals(""))
                flagEmptySpace = true;
            else
                switch(b.getType()){
                    case "Coop":
                        if(tfEgg.getText().equals(""))
                            flagEmptySpace = true;
                        break;
                    case "Cowshed":
                        if(tfMilk.getText().equals(""))
                            flagEmptySpace = true;
                        break;
                    case "Stable":
                        if(tfTransport.getText().equals(""))
                            flagEmptySpace = true;
                }

            if(!flagEmptySpace){
                switch(b.getType()){
                    case "Coop":
                        if(Integer.parseInt(tfCurrentAge.getText()) < 5)
                            a = new Chicken(Integer.parseInt(tfCurrentAge.getText()), Integer.parseInt(tfEgg.getText()));                
                        break;
                    case "Cowshed":
                        if(Integer.parseInt(tfCurrentAge.getText()) < 15)
                            a = new Cow(Integer.parseInt(tfCurrentAge.getText()), Double.parseDouble(tfMilk.getText()));
                        break;
                    case "Stable":
                        if(Integer.parseInt(tfCurrentAge.getText()) < 17)
                            a = new Horse(Integer.parseInt(tfCurrentAge.getText()), Double.parseDouble(tfTransport.getText()));
                }

                if(a != null){
                    res = BuildingSys.addAnimal(b, a);

                    if(res == 0)
                        JOptionPane.showMessageDialog(null,"The budget is not enough for purchase!","Error",1);
                    else if(res == -1)
                        JOptionPane.showMessageDialog(null,"There is not enough capacity in this building!","Error",1);
                    else{
                        lblBudget.setText("Budget: " + BuildingSys.budget + " $");
                        sff.setLblBudget("Budget: " + BuildingSys.budget + " $");
                    }
                }
                else
                    switch(b.getType()){
                    case "Coop":
                        JOptionPane.showMessageDialog(null,"A chicken cannot be older than 5!","Error",1);              
                        break;
                    case "Cowshed":
                        JOptionPane.showMessageDialog(null,"A cow cannot be older than 15!","Error",1);
                        break;
                    case "Stable":
                        JOptionPane.showMessageDialog(null,"A horse cannot be older than 17!","Error",1);
                    }
            }
            else
                JOptionPane.showMessageDialog(null,"Fill all the empty spaces!","Error",1);
        }
    }//GEN-LAST:event_tfMilkKeyPressed

    private void tfTransportKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTransportKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            int id = Integer.parseInt(cmbBuildings.getSelectedItem().toString().substring(0, 3)),
                    res;
            Buildings b = BuildingSys.searchBuilding(id);
            Animal a = null;
            boolean flagEmptySpace = false;

            if(tfCurrentAge.getText().equals(""))
                flagEmptySpace = true;
            else
                switch(b.getType()){
                    case "Coop":
                        if(tfEgg.getText().equals(""))
                            flagEmptySpace = true;
                        break;
                    case "Cowshed":
                        if(tfMilk.getText().equals(""))
                            flagEmptySpace = true;
                        break;
                    case "Stable":
                        if(tfTransport.getText().equals(""))
                            flagEmptySpace = true;
                }

            if(!flagEmptySpace){
                switch(b.getType()){
                    case "Coop":
                        if(Integer.parseInt(tfCurrentAge.getText()) < 5)
                            a = new Chicken(Integer.parseInt(tfCurrentAge.getText()), Integer.parseInt(tfEgg.getText()));                
                        break;
                    case "Cowshed":
                        if(Integer.parseInt(tfCurrentAge.getText()) < 15)
                            a = new Cow(Integer.parseInt(tfCurrentAge.getText()), Double.parseDouble(tfMilk.getText()));
                        break;
                    case "Stable":
                        if(Integer.parseInt(tfCurrentAge.getText()) < 17)
                            a = new Horse(Integer.parseInt(tfCurrentAge.getText()), Double.parseDouble(tfTransport.getText()));
                }

                if(a != null){
                    res = BuildingSys.addAnimal(b, a);

                    if(res == 0)
                        JOptionPane.showMessageDialog(null,"The budget is not enough for purchase!","Error",1);
                    else if(res == -1)
                        JOptionPane.showMessageDialog(null,"There is not enough capacity in this building!","Error",1);
                    else{
                        lblBudget.setText("Budget: " + BuildingSys.budget + " $");
                        sff.setLblBudget("Budget: " + BuildingSys.budget + " $");
                    }
                }
                else
                    switch(b.getType()){
                    case "Coop":
                        JOptionPane.showMessageDialog(null,"A chicken cannot be older than 5!","Error",1);              
                        break;
                    case "Cowshed":
                        JOptionPane.showMessageDialog(null,"A cow cannot be older than 15!","Error",1);
                        break;
                    case "Stable":
                        JOptionPane.showMessageDialog(null,"A horse cannot be older than 17!","Error",1);
                    }
            }
            else
                JOptionPane.showMessageDialog(null,"Fill all the empty spaces!","Error",1);
        }
    }//GEN-LAST:event_tfTransportKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDailyTransport;
    private javax.swing.JButton btnYearlyFeed;
    private javax.swing.JComboBox<String> cmbBuildings;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblAnimalName;
    private javax.swing.JLabel lblBudget;
    private javax.swing.JLabel lblHorseRes;
    private javax.swing.JLabel lblSiloRes;
    private javax.swing.JPanel pnlEgg;
    private javax.swing.JPanel pnlLock;
    private javax.swing.JPanel pnlMilk;
    private javax.swing.JPanel pnlTransport;
    private javax.swing.JTextField tfCurrentAge;
    private javax.swing.JTextField tfEgg;
    private javax.swing.JTextField tfMilk;
    private javax.swing.JTextField tfTransport;
    // End of variables declaration//GEN-END:variables
}
